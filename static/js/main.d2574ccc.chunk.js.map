{"version":3,"sources":["components/Cubes/Cubes.tsx","App.tsx","index.tsx"],"names":["Cubes","useState","selectedCubes","setSelectedCubes","validCubes","setValidCubes","showError","setShowError","handleChange","event","name","currentTarget","includes","filter","n","className","onSubmit","preventDefault","error","selected","valid","i","length","compareArrays","array","number","Math","round","random","push","getRandomArray","type","classNames","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAIaA,EAAkB,WAC7B,MAA0CC,mBAAmB,IAA7D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,mBAAmB,CAAC,EAAG,EAAG,IAA9D,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA0BMC,EAAe,SAACC,GACpB,IAAQC,EAASD,EAAME,cAAfD,KAEHR,EAAcU,UAAUF,GAG3BP,EAAiB,YAAID,EAAcW,QAAO,SAAAC,GAAC,OAAIA,KAAOJ,OAFtDP,EAAiB,GAAD,mBAAKD,GAAL,EAAqBQ,MAgBzC,OACE,mCACE,uBAAMK,UAAU,OAAOC,SAZN,SAACP,GACpBA,EAAMQ,iBACN,IAAMC,EAtBc,SAACC,EAAoBC,GACzC,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAcoB,OAAQD,GAAK,EAC7C,IAAKD,EAAMR,SAASO,EAASE,KAAOF,EAASG,SAAWF,EAAME,OAC5D,OAAO,EAIX,OAAO,EAeOC,CAAcrB,EAAeE,GACrCoB,EArCe,WAGrB,IAFA,IAAMJ,EAAQ,GAEPhB,EAAWkB,OAAS,GAAI,CAC7B,IAAMG,EAASC,KAAKC,OAAM,EAAAD,KAAKE,SAAqB,GAE/CxB,EAAWQ,SAASa,IACvBL,EAAMS,KAAKJ,GAIf,OAAOL,EA0BOU,GAEd3B,EAAiB,IACjBE,EAAcmB,GACdjB,EAAaW,IAKX,UACE,0BAASH,UAAU,QAAnB,UACE,wBACEgB,KAAK,SACLrB,KAAK,IACLK,UAAWiB,IAAW,OAAQ,CAAEb,SAAUjB,EAAcU,SAAS,KACjEqB,QAASzB,EAJX,SAMG,MAEH,wBACEuB,KAAK,SACLrB,KAAK,IACLK,UAAWiB,IAAW,OAAQ,CAAEb,SAAUjB,EAAcU,SAAS,KACjEqB,QAASzB,EAJX,SAMG,MAEH,wBACEuB,KAAK,SACLrB,KAAK,IACLK,UAAWiB,IAAW,OAAQ,CAAEb,SAAUjB,EAAcU,SAAS,KACjEqB,QAASzB,EAJX,SAMG,MAEH,wBACEuB,KAAK,SACLrB,KAAK,IACLK,UAAWiB,IAAW,OAAQ,CAAEb,SAAUjB,EAAcU,SAAS,KACjEqB,QAASzB,EAJX,SAMG,MAEH,wBACEuB,KAAK,SACLrB,KAAK,IACLK,UAAWiB,IAAW,OAAQ,CAAEb,SAAUjB,EAAcU,SAAS,KACjEqB,QAASzB,EAJX,SAMG,MAEH,wBACEuB,KAAK,SACLrB,KAAK,IACLK,UAAWiB,IAAW,OAAQ,CAAEb,SAAUjB,EAAcU,SAAS,KACjEqB,QAASzB,EAJX,SAMG,SAIL,wBACEuB,KAAK,SACLhB,UAAU,SAFZ,qBAMET,GACA,qBAAKS,UAAU,QAAf,yBC9GGmB,EAAgB,WAC3B,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCFNoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d2574ccc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './cubes.scss';\n\nexport const Cubes: React.FC = () => {\n  const [selectedCubes, setSelectedCubes] = useState<number[]>([]);\n  const [validCubes, setValidCubes] = useState<number[]>([1, 2, 3]);\n  const [showError, setShowError] = useState(false);\n\n  const getRandomArray = () => {\n    const valid = [];\n\n    for (; validCubes.length < 3;) {\n      const number = Math.round(Math.random() * (0 - 7) + 0);\n\n      if (!validCubes.includes(number)) {\n        valid.push(number);\n      }\n    }\n\n    return valid;\n  };\n\n  const compareArrays = (selected: number[], valid: number[]) => {\n    for (let i = 0; i < selectedCubes.length; i += 1) {\n      if (!valid.includes(selected[i]) || selected.length !== valid.length) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const handleChange = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { name } = event.currentTarget;\n\n    if (!selectedCubes.includes(+name)) {\n      setSelectedCubes([...selectedCubes, +name]);\n    } else {\n      setSelectedCubes([...selectedCubes.filter(n => n !== +name)]);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const error = compareArrays(selectedCubes, validCubes);\n    const array = getRandomArray();\n\n    setSelectedCubes([]);\n    setValidCubes(array);\n    setShowError(error);\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <section className=\"cubes\">\n          <button\n            type=\"button\"\n            name=\"1\"\n            className={classNames('cube', { selected: selectedCubes.includes(1) })}\n            onClick={handleChange}\n          >\n            {' '}\n          </button>\n          <button\n            type=\"button\"\n            name=\"2\"\n            className={classNames('cube', { selected: selectedCubes.includes(2) })}\n            onClick={handleChange}\n          >\n            {' '}\n          </button>\n          <button\n            type=\"button\"\n            name=\"3\"\n            className={classNames('cube', { selected: selectedCubes.includes(3) })}\n            onClick={handleChange}\n          >\n            {' '}\n          </button>\n          <button\n            type=\"button\"\n            name=\"4\"\n            className={classNames('cube', { selected: selectedCubes.includes(4) })}\n            onClick={handleChange}\n          >\n            {' '}\n          </button>\n          <button\n            type=\"button\"\n            name=\"5\"\n            className={classNames('cube', { selected: selectedCubes.includes(5) })}\n            onClick={handleChange}\n          >\n            {' '}\n          </button>\n          <button\n            type=\"button\"\n            name=\"6\"\n            className={classNames('cube', { selected: selectedCubes.includes(6) })}\n            onClick={handleChange}\n          >\n            {' '}\n          </button>\n        </section>\n\n        <button\n          type=\"submit\"\n          className=\"submit\"\n        >\n          Submit\n        </button>\n        {!showError && (\n          <div className=\"error\">\n            Error\n          </div>\n        )}\n      </form>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Cubes } from './components/Cubes';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Cubes />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}